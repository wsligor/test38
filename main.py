# This is a sample Python script.

import tkinter
from tkinter import *
from tkinter import filedialog

import fitz
from typing import Tuple

from PIL import Image as ImagePIL
from PIL import ImageTk

# from pylibdmtx.pylibdmtx import decode

# Настройки для 120 этикеток
# CROP_RESIZE_WIDTH = 60
# CROP_RESIZE_HEIGHT = 60

CROP_RESIZE_WIDTH = 40
CROP_RESIZE_HEIGHT = 40

TILED_SIZE = (800, 1120)

QR_IN = (
    (38,   88, 170,  220), (248,   88, 380,  220), (458,   88, 590,  220), (668,   88, 798,  220), (880,   88, 1012,  220),
    (38,  446, 170,  578), (248,  446, 380,  578), (458,  446, 590,  578), (668,  446, 798,  578), (880,  446, 1012,  578),
    (38,  804, 170,  936), (248,  804, 380,  936), (458,  804, 590,  936), (668,  804, 798,  936), (880,  804, 1012,  936),
    (38, 1162, 170, 1294), (248, 1162, 380, 1294), (458, 1162, 590, 1294), (668, 1162, 798, 1294), (880, 1162, 1012, 1294)
    )

# QR_OUT = (
#     (10, 20), (90, 20), (170, 20), (250, 20), (330, 20), (410, 20), (490, 20), (570, 20), (650, 20), (730, 20),
#     (10,110), (90,110), (170,110), (250,110), (330,110), (410,110), (490,110), (570,110), (650,110), (730,110),
#     (10,203), (90,203), (170,203), (250,203), (330,203), (410,203), (490,203), (570,203), (650,203), (730,203),
#     (10,296), (90,296), (170,296), (250,296), (330,296), (410,296), (490,296), (570,296), (650,296), (730,296),
#     (10, 390), (90, 390), (170, 390), (250, 390), (330, 390), (410, 390), (490, 390), (570, 390), (650, 390), (730, 390),
#     (10, 483), (90, 483), (170, 483), (250, 483), (330, 483), (410, 483), (490, 483), (570, 483), (650, 483), (730, 483),
#     (10, 576), (90, 576), (170, 576), (250, 576), (330, 576), (410, 576), (490, 576), (570, 576), (650, 576), (730, 576),
#     (10, 669), (90, 669), (170, 669), (250, 669), (330, 669), (410, 669), (490, 669), (570, 669), (650, 669), (730, 669),
#     (10, 762), (90, 762), (170, 762), (250, 762), (330, 762), (410, 762), (490, 762), (570, 762), (650, 762), (730, 762),
#     (10, 856), (90, 856), (170, 856), (250, 856), (330, 856), (410, 856), (490, 856), (570, 856), (650, 856), (730, 856),
#     (10, 949), (90, 949), (170, 949), (250, 949), (330, 949), (410, 949), (490, 949), (570, 949), (650, 949), (730, 949),
#     (10, 1042), (90, 1042), (170, 1042), (250, 1042), (330, 1042), (410, 1042), (490, 1042), (570, 1042), (650, 1042), (730, 1042),
#     )

y=48
QR_OUT_220 = (
    (20,  31), (99,  31), (178,  31), (257,  31), (336,  31), (415,  31), (494,  31), (573,  31), (652,  31), (731,  31),#1
    (20,  31+y), (99,  31+y), (178,  31+y), (257,  31+y), (336,  31+y), (415,  31+y), (494,  31+y), (573,  31+y), (652,  31+y), (731,  31+y),#2
    (20, 31+y*2), (99, 31+y*2), (178, 31+y*2), (257, 31+y*2), (336, 31+y*2), (415, 31+y*2), (494, 31+y*2), (573, 31+y*2), (652, 31+y*2), (731, 31+y*2),#3
    (20, 31+y*3), (99, 31+y*3), (178, 31+y*3), (257, 31+y*3), (336, 31+y*3), (415, 31+y*3), (494, 31+y*3), (573, 31+y*3), (652, 31+y*3), (731, 31+y*3),#4
    (20, 31+y*4), (99, 31+y*4), (178, 31+y*4), (257, 31+y*4), (336, 31+y*4), (415, 31+y*4), (494, 31+y*4), (573, 31+y*4), (652, 31+y*4), (731, 31+y*4),#5
    (20, 31+y*5), (99, 31+y*5), (178, 31+y*5), (257, 31+y*5), (336, 31+y*5), (415, 31+y*5), (494, 31+y*5), (573, 31+y*5), (652, 31+y*5), (731, 31+y*5),#6
    (20, 31+y*6), (99, 31+y*6), (178, 31+y*6), (257, 31+y*6), (336, 31+y*6), (415, 31+y*6), (494, 31+y*6), (573, 31+y*6), (652, 31+y*6), (731, 31+y*6),#7
    (20, 31+y*7-1), (99, 31+y*7-1), (178, 31+y*7-1), (257, 31+y*7-1), (336, 31+y*7-1), (415, 31+y*7-1), (494, 31+y*7-1), (573, 31+y*7-1), (652, 31+y*7-1), (731, 31+y*7-1),#8
    (20, 31+y*8-1), (99, 31+y*8-1), (178, 31+y*8-1), (257, 31+y*8-1), (336, 31+y*8-1), (415, 31+y*8-1), (494, 31+y*8-1), (573, 31+y*8-1), (652, 31+y*8-1), (731, 31+y*8-1),#9
    (20, 31+y*9-1), (99, 31+y*9-1), (178, 31+y*9-1), (257, 31+y*9-1), (336, 31+y*9-1), (415, 31+y*9-1), (494, 31+y*9-1), (573, 31+y*9-1), (652, 31+y*9-1), (731, 31+y*9-1),#10
    (20, 31+y*10-2), (99, 31+y*10-2), (178, 31+y*10-2), (257, 31+y*10-2), (336, 31+y*10-2), (415, 31+y*10-2), (494, 31+y*10-2), (573, 31+y*10-2), (652, 31+y*10-2), (731, 31+y*10-2),#11
    (20, 31+y*11-2), (99, 31+y*11-2), (178, 31+y*11-2), (257, 31+y*11-2), (336, 31+y*11-2), (415, 31+y*11-2), (494, 31+y*11-2), (573, 31+y*11-2), (652, 31+y*11-2), (731, 31+y*11-2),#12
    (20, 31+y*12-2), (99, 31+y*12-2), (178, 31+y*12-2), (257, 31+y*12-2), (336, 31+y*12-2), (415, 31+y*12-2), (494, 31+y*12-2), (573, 31+y*12-2), (652, 31+y*12-2), (731, 31+y*12-2),#13
    (20, 31+y*13-2), (99, 31+y*13-2), (178, 31+y*13-2), (257, 31+y*13-2), (336, 31+y*13-2), (415, 31+y*13-2), (494, 31+y*13-2), (573, 31+y*13-2), (652, 31+y*13-2), (731, 31+y*13-2),#14
    (20, 31+y*14-2), (99, 31+y*14-2), (178, 31+y*14-2), (257, 31+y*14-2), (336, 31+y*14-2), (415, 31+y*14-2), (494, 31+y*14-2), (573, 31+y*14-2), (652, 31+y*14-2), (731, 31+y*14-2),#15
    (20, 31+y*15-3), (99, 31+y*15-3), (178, 31+y*15-3), (257, 31+y*15-3), (336, 31+y*15-3), (415, 31+y*15-3), (494, 31+y*15-3), (573, 31+y*15-3), (652, 31+y*15-3), (731, 31+y*15-3),#16
    (20, 31+y*16-3), (99, 31+y*16-3), (178, 31+y*16-3), (257, 31+y*16-3), (336, 31+y*16-3), (415, 31+y*16-3), (494, 31+y*16-3), (573, 31+y*16-3), (652, 31+y*16-3), (731, 31+y*16-3),#17
    (20, 31+y*17-3), (99, 31+y*17-3), (178, 31+y*17-3), (257, 31+y*17-3), (336, 31+y*17-3), (415, 31+y*17-3), (494, 31+y*17-3), (573, 31+y*17-3), (652, 31+y*17-3), (731, 31+y*17-3),#18
    (20, 31+y*18-3), (99, 31+y*18-3), (178, 31+y*18-3), (257, 31+y*18-3), (336, 31+y*18-3), (415, 31+y*18-3), (494, 31+y*18-3), (573, 31+y*18-3), (652, 31+y*18-3), (731, 31+y*18-3),#19
    (20, 31+y*19-4), (99, 31+y*19-4), (178, 31+y*19-4), (257, 31+y*19-4), (336, 31+y*19-4), (415, 31+y*19-4), (494, 31+y*19-4), (573, 31+y*19-4), (652, 31+y*19-4), (731, 31+y*19-4),#20
    (20, 31+y*20-4), (99, 31+y*20-4), (178, 31+y*20-4), (257, 31+y*20-4), (336, 31+y*20-4), (415, 31+y*20-4), (494, 31+y*20-4), (573, 31+y*20-4), (652, 31+y*20-4), (731, 31+y*20-4),#21
    (20, 31+y*21-5), (99, 31+y*21-5), (178, 31+y*21-5), (257, 31+y*21-5), (336, 31+y*21-5), (415, 31+y*21-5), (494, 31+y*21-5), (573, 31+y*21-5), (652, 31+y*21-5), (731, 31+y*21-5),#22
    # (20, 33+y*22-3), (99, 33+y*22-3), (178, 33+y*22-3), (257, 33+y*22-3), (336, 33+y*22-3), (415, 33+y*22-3), (494, 33+y*22-3), (573, 33+y*22-3), (652, 33+y*22-3), (731, 33+y*22-3),#23

)

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.

def block(count_page):
    tiled_img = ImagePIL.new('RGB', TILED_SIZE, (250, 250, 250))
    num_page = 1; x = 0

    #for y in range (count_page):
    for y in range(11):
        for i in range(20):
            filename = 'order' + str(num_page) + '.jpg'
            img = ImagePIL.open(filename)
            img.load()
            crop_img = img.crop(QR_IN[i])
            # crop_img.save('crop_img.jpg')
            # qr_img = cv2.imread("crop_img.jpg")
            # data = decode(crop_img)
            # print(data)
            # a = data[0].data
            # for im in a:
            #     print(im)
            img.close()
            new_crop_img = crop_img.resize((CROP_RESIZE_WIDTH, CROP_RESIZE_HEIGHT))
            new_crop_img.save('new_crop_img.jpg')
            tiled_img.paste(new_crop_img, QR_OUT_220[x])
            x += 1
        num_page += 1

    tiled_img.save('tiled_img.jpg')
    tiled_img.close()

def convert_pdf2img(input_file: str, pages: Tuple = None):
    """Преобразует PDF в изображение и создает файл за страницей"""
    # Open the document

    pdf_in = fitz.open(input_file)
    output_files = []
    i = 0
    # Полистаем страницы
    for page in pdf_in:
        i += 1
        if str(pages) != str(None):
            if str(page) not in str(pages):
                continue
        # Выберем страницу
        # rotate = int(0)
        # PDF Страница конвертируется в целое изображение 1056 * 816, а затем для каждого изображения делается снимок экрана.
        # zoom = 1.33333333 -----> Размер изображения = 1056 * 816
        # zoom = 2 ---> 2 * Разрешение по умолчанию (текст четкий, текст изображения плохо читается) = маленький размер файла/размер изображения = 1584 * 1224
        # zoom = 4 ---> 4 * Разрешение по умолчанию (текст четкий, текст изображения плохо читается) = большой размер файла
        # zoom = 8 ---> 8 * Разрешение по умолчанию (текст четкий, текст изображения читается) = большой размер файла
        zoom_x = 2.08
        zoom_y = 2.08
        # Коэффициент масштабирования равен 2, чтобы текст был четким
        # Pre-rotate - это вращение при необходимости.
        mat = fitz.Matrix(zoom_x, zoom_y)  # .preRotate(rotate)
        # pix = page.getPixmap(matrix=mat, alpha=False)
        output_file = "order" + str(i) + ".jpg"
        pix = page.get_pixmap(matrix=mat)
        # pix.writePNG(output_file)
        pix.save(output_file)
        output_files.append(output_file)
        count_page = i
    pdf_in.close()
    # summary = {
    #    "Исходный файл": input_file, "Страниц": str(pages), "Выходной файл(ы)": str(output_files)
    # }
    # Printing Summary
    # print("#### Отчет ########################################################")
    # print("\n".join("{}:{}".format(i, j) for i, j in summary.items()))
    # print("###################################################################")
    return count_page


def print_hi(name, count_page):
    # Use a breakpoint in the code line below to debug your script.
    block(count_page)
    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    window = Tk()
    window.title = "QR kod"
    file = filedialog.askopenfilename(filetypes=(('PDF', '*.pdf'), ('PDF', '*.pdf')))
    print(file)
    n = convert_pdf2img(file)
    print(n)
    print_hi('PyCharm', n)
    canvas = tkinter.Canvas(window, height=600, width=800)
    image = ImagePIL.open('tiled_img.jpg')
    photo = ImageTk.PhotoImage(image)
    image = canvas.create_image(0, 0, anchor='nw', image=photo)
    canvas.grid(row=1, column=1)
    window.mainloop()


# See PyCharm help at https://www.jetbrains.com/help/pycharm/
